pipeline:
  name: create_service_tf
  identifier: create_service_tf
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: create_service
        identifier: create_service
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: get_values
                  identifier: get_values
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: "echo repo_name: $repo_name"
                    environmentVariables:
                      - name: repo_name
                        type: String
                        value: <+input>
                    outputVariables:
                      - name: repo_name
                        type: String
                        value: repo_name
                  timeout: 10m
              - step:
                  type: HarnessApproval
                  name: approval
                  identifier: approval
                  spec:
                    approvalMessage: Please review the following information and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    isAutoRejectEnabled: false
                    approvers:
                      userGroups:
                        - account._account_all_users
                      minimumCount: 1
                      disallowPipelineExecutor: false
                    approverInputs: []
                  timeout: 1d
                  when:
                    stageStatus: Failure
              - step:
                  type: TerraformPlan
                  name: plan
                  identifier: plan
                  spec:
                    provisionerIdentifier: service_provisioner
                    configuration:
                      command: Apply
                      configFiles:
                        store:
                          spec:
                            connectorRef: account.poc_github
                            repoName: the_looking_glass
                            gitFetchType: Branch
                            branch: main
                            folderPath: create_service_tf/terraform
                          type: Github
                      varFiles:
                        - varFile:
                            spec:
                              content: <+input>
                            identifier: repo_name
                            type: Inline
                        - varFile:
                            spec:
                              content: <+input>
                            identifier: service_name
                            type: Inline
                      secretManagerRef: account.harnessSecretManager
                      skipRefreshCommand: false
                  timeout: 10m
                  when:
                    stageStatus: Failure
        tags: {}
